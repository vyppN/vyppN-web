/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface MetroBold {
    }
    interface MetroColumn {
        "align"?: string;
        "justify"?: string;
        "padding"?: string | number;
    }
    interface MetroHorizontalSpace {
        "space": number;
    }
    interface MetroImage {
        "errorImage": string;
        "height": string | number;
        "source": string;
        "width": string | number;
    }
    interface MetroLarge {
    }
    interface MetroLarger {
    }
    interface MetroMedium {
    }
    interface MetroRow {
        "align"?: string;
        "justify"?: string;
        "padding"?: string | number;
    }
    interface MetroSmall {
    }
    interface MetroText {
    }
    interface MetroVerticalSpace {
        "space": number;
    }
    interface MetroXlarge {
    }
    interface MetroXsmall {
    }
    interface MyComponent {
    }
}
declare global {
    interface HTMLMetroBoldElement extends Components.MetroBold, HTMLStencilElement {
    }
    var HTMLMetroBoldElement: {
        prototype: HTMLMetroBoldElement;
        new (): HTMLMetroBoldElement;
    };
    interface HTMLMetroColumnElement extends Components.MetroColumn, HTMLStencilElement {
    }
    var HTMLMetroColumnElement: {
        prototype: HTMLMetroColumnElement;
        new (): HTMLMetroColumnElement;
    };
    interface HTMLMetroHorizontalSpaceElement extends Components.MetroHorizontalSpace, HTMLStencilElement {
    }
    var HTMLMetroHorizontalSpaceElement: {
        prototype: HTMLMetroHorizontalSpaceElement;
        new (): HTMLMetroHorizontalSpaceElement;
    };
    interface HTMLMetroImageElement extends Components.MetroImage, HTMLStencilElement {
    }
    var HTMLMetroImageElement: {
        prototype: HTMLMetroImageElement;
        new (): HTMLMetroImageElement;
    };
    interface HTMLMetroLargeElement extends Components.MetroLarge, HTMLStencilElement {
    }
    var HTMLMetroLargeElement: {
        prototype: HTMLMetroLargeElement;
        new (): HTMLMetroLargeElement;
    };
    interface HTMLMetroLargerElement extends Components.MetroLarger, HTMLStencilElement {
    }
    var HTMLMetroLargerElement: {
        prototype: HTMLMetroLargerElement;
        new (): HTMLMetroLargerElement;
    };
    interface HTMLMetroMediumElement extends Components.MetroMedium, HTMLStencilElement {
    }
    var HTMLMetroMediumElement: {
        prototype: HTMLMetroMediumElement;
        new (): HTMLMetroMediumElement;
    };
    interface HTMLMetroRowElement extends Components.MetroRow, HTMLStencilElement {
    }
    var HTMLMetroRowElement: {
        prototype: HTMLMetroRowElement;
        new (): HTMLMetroRowElement;
    };
    interface HTMLMetroSmallElement extends Components.MetroSmall, HTMLStencilElement {
    }
    var HTMLMetroSmallElement: {
        prototype: HTMLMetroSmallElement;
        new (): HTMLMetroSmallElement;
    };
    interface HTMLMetroTextElement extends Components.MetroText, HTMLStencilElement {
    }
    var HTMLMetroTextElement: {
        prototype: HTMLMetroTextElement;
        new (): HTMLMetroTextElement;
    };
    interface HTMLMetroVerticalSpaceElement extends Components.MetroVerticalSpace, HTMLStencilElement {
    }
    var HTMLMetroVerticalSpaceElement: {
        prototype: HTMLMetroVerticalSpaceElement;
        new (): HTMLMetroVerticalSpaceElement;
    };
    interface HTMLMetroXlargeElement extends Components.MetroXlarge, HTMLStencilElement {
    }
    var HTMLMetroXlargeElement: {
        prototype: HTMLMetroXlargeElement;
        new (): HTMLMetroXlargeElement;
    };
    interface HTMLMetroXsmallElement extends Components.MetroXsmall, HTMLStencilElement {
    }
    var HTMLMetroXsmallElement: {
        prototype: HTMLMetroXsmallElement;
        new (): HTMLMetroXsmallElement;
    };
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLElementTagNameMap {
        "metro-bold": HTMLMetroBoldElement;
        "metro-column": HTMLMetroColumnElement;
        "metro-horizontal-space": HTMLMetroHorizontalSpaceElement;
        "metro-image": HTMLMetroImageElement;
        "metro-large": HTMLMetroLargeElement;
        "metro-larger": HTMLMetroLargerElement;
        "metro-medium": HTMLMetroMediumElement;
        "metro-row": HTMLMetroRowElement;
        "metro-small": HTMLMetroSmallElement;
        "metro-text": HTMLMetroTextElement;
        "metro-vertical-space": HTMLMetroVerticalSpaceElement;
        "metro-xlarge": HTMLMetroXlargeElement;
        "metro-xsmall": HTMLMetroXsmallElement;
        "my-component": HTMLMyComponentElement;
    }
}
declare namespace LocalJSX {
    interface MetroBold {
    }
    interface MetroColumn {
        "align"?: string;
        "justify"?: string;
        "padding"?: string | number;
    }
    interface MetroHorizontalSpace {
        "space"?: number;
    }
    interface MetroImage {
        "errorImage"?: string;
        "height"?: string | number;
        "source"?: string;
        "width"?: string | number;
    }
    interface MetroLarge {
    }
    interface MetroLarger {
    }
    interface MetroMedium {
    }
    interface MetroRow {
        "align"?: string;
        "justify"?: string;
        "padding"?: string | number;
    }
    interface MetroSmall {
    }
    interface MetroText {
    }
    interface MetroVerticalSpace {
        "space"?: number;
    }
    interface MetroXlarge {
    }
    interface MetroXsmall {
    }
    interface MyComponent {
    }
    interface IntrinsicElements {
        "metro-bold": MetroBold;
        "metro-column": MetroColumn;
        "metro-horizontal-space": MetroHorizontalSpace;
        "metro-image": MetroImage;
        "metro-large": MetroLarge;
        "metro-larger": MetroLarger;
        "metro-medium": MetroMedium;
        "metro-row": MetroRow;
        "metro-small": MetroSmall;
        "metro-text": MetroText;
        "metro-vertical-space": MetroVerticalSpace;
        "metro-xlarge": MetroXlarge;
        "metro-xsmall": MetroXsmall;
        "my-component": MyComponent;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "metro-bold": LocalJSX.MetroBold & JSXBase.HTMLAttributes<HTMLMetroBoldElement>;
            "metro-column": LocalJSX.MetroColumn & JSXBase.HTMLAttributes<HTMLMetroColumnElement>;
            "metro-horizontal-space": LocalJSX.MetroHorizontalSpace & JSXBase.HTMLAttributes<HTMLMetroHorizontalSpaceElement>;
            "metro-image": LocalJSX.MetroImage & JSXBase.HTMLAttributes<HTMLMetroImageElement>;
            "metro-large": LocalJSX.MetroLarge & JSXBase.HTMLAttributes<HTMLMetroLargeElement>;
            "metro-larger": LocalJSX.MetroLarger & JSXBase.HTMLAttributes<HTMLMetroLargerElement>;
            "metro-medium": LocalJSX.MetroMedium & JSXBase.HTMLAttributes<HTMLMetroMediumElement>;
            "metro-row": LocalJSX.MetroRow & JSXBase.HTMLAttributes<HTMLMetroRowElement>;
            "metro-small": LocalJSX.MetroSmall & JSXBase.HTMLAttributes<HTMLMetroSmallElement>;
            "metro-text": LocalJSX.MetroText & JSXBase.HTMLAttributes<HTMLMetroTextElement>;
            "metro-vertical-space": LocalJSX.MetroVerticalSpace & JSXBase.HTMLAttributes<HTMLMetroVerticalSpaceElement>;
            "metro-xlarge": LocalJSX.MetroXlarge & JSXBase.HTMLAttributes<HTMLMetroXlargeElement>;
            "metro-xsmall": LocalJSX.MetroXsmall & JSXBase.HTMLAttributes<HTMLMetroXsmallElement>;
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
        }
    }
}
